plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '4.1.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${buildVersion()}-mc${project.minecraft_version}+${buildMetadata()}"
group = project.maven_group

def buildVersion() {
    if (grgit != null) {
        def tags = grgit.tag.list().sort { a, b -> b.getName() <=> a.getName() }
        return tags.get(0).getName()[1..-1]
    } else {
        return "unknown"
    }
}

def buildMetadata() {
    def ci_build = System.getenv("GITHUB_RUN_NUMBER")
    if (ci_build != null) {
        return "build.${ci_build}"
    } else if (grgit != null) {
        def commit_hash = grgit.head().abbreviatedId
        if (grgit.status().clean) {
            return "rev.${commit_hash}"
        } else {
            return "rev.${commit_hash}.dirty"
        }
    } else {
        return "unknown"
    }
}

repositories {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API.
    Set<String> apiModules = [
        "fabric-command-api-v1",
        "fabric-events-interaction-v0",
        "fabric-lifecycle-events-v1",
        "fabric-particles-v1"
    ]
    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, "${project.fabric_version}")))
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
